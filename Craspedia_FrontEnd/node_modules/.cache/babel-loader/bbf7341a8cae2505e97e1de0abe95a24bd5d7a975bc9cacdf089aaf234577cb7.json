{"ast":null,"code":"var _jsxFileName = \"/Users/melvinang/Desktop/Craspedia_FrontEnd/craspedia/src/components/HomeCarousel.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { wrap } from \"popmotion\";\nimport { images } from \"./image-data.ts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst variants = {\n  enter: direction => {\n    return {\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1\n  },\n  exit: direction => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  }\n};\n\n/**\n * Experimenting with distilling swipe offset and velocity into a single variable, so the\n * less distance a user has swiped, the more velocity they need to register as a swipe.\n * Should accomodate longer swipes and short flicks without having binary checks on\n * just distance thresholds and velocity > 0.\n */\nconst swipeConfidenceThreshold = 10000;\nconst swipePower = (offset, velocity) => {\n  return Math.abs(offset) * velocity;\n};\nexport const HomeCarousel = () => {\n  _s();\n  const [[page, direction], setPage] = useState([0, 0]);\n\n  // We only have 3 images, but we paginate them absolutely (ie 1, 2, 3, 4, 5...) and\n  // then wrap that within 0-2 to find our image ID in the array below. By passing an\n  // absolute page index as the `motion` component's `key` prop, `AnimatePresence` will\n  // detect it as an entirely new image. So you can infinitely paginate as few as 1 images.\n  const imageIndex = wrap(0, images.length, page);\n  const paginate = newDirection => {\n    setPage([page + newDirection, newDirection]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n      initial: false,\n      custom: direction,\n      children: /*#__PURE__*/_jsxDEV(motion.img, {\n        src: images[imageIndex],\n        custom: direction,\n        variants: variants,\n        initial: \"enter\",\n        animate: \"center\",\n        exit: \"exit\",\n        transition: {\n          x: {\n            type: \"spring\",\n            stiffness: 300,\n            damping: 30\n          },\n          opacity: {\n            duration: 0.2\n          }\n        },\n        drag: \"x\",\n        dragConstraints: {\n          left: 0,\n          right: 0\n        },\n        dragElastic: 1,\n        onDragEnd: (e, {\n          offset,\n          velocity\n        }) => {\n          const swipe = swipePower(offset.x, velocity.x);\n          if (swipe < -swipeConfidenceThreshold) {\n            paginate(1);\n          } else if (swipe > swipeConfidenceThreshold) {\n            paginate(-1);\n          }\n        }\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next\",\n      onClick: () => paginate(1),\n      children: \"‣\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prev\",\n      onClick: () => paginate(-1),\n      children: \"‣\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomeCarousel, \"wDm/sR0ENd3hz0xTHLusEYtcOtc=\");\n_c = HomeCarousel;\nexport default HomeCarousel;\nvar _c;\n$RefreshReg$(_c, \"HomeCarousel\");","map":{"version":3,"names":["React","useState","motion","AnimatePresence","wrap","images","jsxDEV","_jsxDEV","Fragment","_Fragment","variants","enter","direction","x","opacity","center","zIndex","exit","swipeConfidenceThreshold","swipePower","offset","velocity","Math","abs","HomeCarousel","_s","page","setPage","imageIndex","length","paginate","newDirection","children","initial","custom","img","src","animate","transition","type","stiffness","damping","duration","drag","dragConstraints","left","right","dragElastic","onDragEnd","e","swipe","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/melvinang/Desktop/Craspedia_FrontEnd/craspedia/src/components/HomeCarousel.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { wrap } from \"popmotion\";\nimport { images } from \"./image-data.ts\";\n\nconst variants = {\n  enter: (direction: number) => {\n    return {\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1\n  },\n  exit: (direction: number) => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  }\n};\n\n/**\n * Experimenting with distilling swipe offset and velocity into a single variable, so the\n * less distance a user has swiped, the more velocity they need to register as a swipe.\n * Should accomodate longer swipes and short flicks without having binary checks on\n * just distance thresholds and velocity > 0.\n */\nconst swipeConfidenceThreshold = 10000;\nconst swipePower = (offset: number, velocity: number) => {\n  return Math.abs(offset) * velocity;\n};\n\nexport const HomeCarousel = () => {\n  const [[page, direction], setPage] = useState([0, 0]);\n\n  // We only have 3 images, but we paginate them absolutely (ie 1, 2, 3, 4, 5...) and\n  // then wrap that within 0-2 to find our image ID in the array below. By passing an\n  // absolute page index as the `motion` component's `key` prop, `AnimatePresence` will\n  // detect it as an entirely new image. So you can infinitely paginate as few as 1 images.\n  const imageIndex = wrap(0, images.length, page);\n\n  const paginate = (newDirection: number) => {\n    setPage([page + newDirection, newDirection]);\n  };\n\n  return (\n    <>\n      <AnimatePresence initial={false} custom={direction}>\n        <motion.img\n          key={page}\n          src={images[imageIndex]}\n          custom={direction}\n          variants={variants}\n          initial=\"enter\"\n          animate=\"center\"\n          exit=\"exit\"\n          transition={{\n            x: { type: \"spring\", stiffness: 300, damping: 30 },\n            opacity: { duration: 0.2 }\n          }}\n          drag=\"x\"\n          dragConstraints={{ left: 0, right: 0 }}\n          dragElastic={1}\n          onDragEnd={(e, { offset, velocity }) => {\n            const swipe = swipePower(offset.x, velocity.x);\n\n            if (swipe < -swipeConfidenceThreshold) {\n              paginate(1);\n            } else if (swipe > swipeConfidenceThreshold) {\n              paginate(-1);\n            }\n          }}\n        />\n      </AnimatePresence>\n      <div className=\"next\" onClick={() => paginate(1)}>\n        {\"‣\"}\n      </div>\n      <div className=\"prev\" onClick={() => paginate(-1)}>\n        {\"‣\"}\n      </div>\n    </>\n  );\n};\n\nexport default HomeCarousel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}